// <auto-generated />
using DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AsyncASP.NETCore6WebAPI.Migrations
{
    [DbContext(typeof(BooksDbContext))]
    [Migration("20231201061947_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Author",
                            LastName = "1"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Author",
                            LastName = "2"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Author",
                            LastName = "3"
                        });
                });

            modelBuilder.Entity("Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "Description 1",
                            Title = "Book 1"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Description = "Description 2",
                            Title = "Book 2"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Description = "Description 3",
                            Title = "Book 3"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Description = "Description 4",
                            Title = "Book 4"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            Description = "Description 5",
                            Title = "Book 5"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            Description = "Description 6",
                            Title = "Book 6"
                        });
                });

            modelBuilder.Entity("Entities.Book", b =>
                {
                    b.HasOne("Entities.Author", null)
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
